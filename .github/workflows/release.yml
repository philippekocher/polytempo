name: Release

on:
  push:
    tags:
    - '[0-9]+.[0-9]+.[0-9]+'
    - '[0-9]+.[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch:
    inputs:
      version:
        description: Release Version
        default: 0.0.0.1
        required: true
      
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  PROJECT_NAME_NETWORK: PolytempoNetwork
  PROJECT_NAME_COMPOSER: PolytempoComposer
  NETWORK_DIR: 'POLYTEMPO NETWORK'
  COMPOSER_DIR: 'POLYTEMPO COMPOSER'
  BUILD_DIR: build
  
jobs:
# preparation once for all platforms: create release and define version
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}
      hasTweak: ${{ steps.get_version.outputs.HASTWEAK }}
    steps:
    - name: Get the version
      id: get_version
      shell: bash
      run: |
        [ "${{github.event_name}}" == "workflow_dispatch" ] && v=${{github.event.inputs.version}} || v=${GITHUB_REF/refs\/tags\//}
        va=${v}
        if [[ ${va} =~ [0-9]+\.[0-9]+\.[0-9]+\.[0-9]+ ]]; then hasTweak=true; else hasTweak=false; fi
        echo "HASTWEAK=${hasTweak}" >> "$GITHUB_OUTPUT" 
        echo "VERSION=${va}" >> "$GITHUB_OUTPUT"      
    
  build:
    needs: prepare
    name: ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: ${{ needs.prepare.outputs.hasTweak == false }} # allow prereleases to be partly built 
      matrix:
        os: [windows-2019, ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          artifact: Linux
          extension: ''
        - os: windows-2019
          artifact: Windows
          extension: '.exe'
        - os: macos-latest
          artifact: MacOS
          extension: '.app'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set Project Version
      shell: bash
      run: |
        sed -i.bak "s/VERSION.*/VERSION ${{ needs.prepare.outputs.version }}/" "${{env.NETWORK_DIR}}/CMakeLists.txt"
        sed -i.bak "s/VERSION.*/VERSION ${{ needs.prepare.outputs.version }}/" "${{env.COMPOSER_DIR}}/CMakeLists.txt"
      
    - if: ${{ runner.os == 'Linux' }}
      name: Install JUCE dependencies (Linux only)
      id: juce_dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y g++ libgtk-3-dev libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev mesa-common-dev libasound2-dev freeglut3-dev libxcomposite-dev libcurl4-openssl-dev
        
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/${{ env.BUILD_DIR }}

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/${{ env.BUILD_DIR }}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/${{ env.BUILD_DIR }}
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Zip Polytempo Network
      working-directory: ${{github.workspace}}/${{ env.BUILD_DIR }}/${{env.NETWORK_DIR}}/${{ env.PROJECT_NAME_NETWORK }}_artefacts/${{ env.BUILD_TYPE }}
      run: |
        cmake -E tar cfv "${{ env.PROJECT_NAME_NETWORK }}.zip" --format=zip "${{env.PROJECT_NAME_NETWORK}}${{matrix.extension}}"
    
    - name: Zip Polytempo Composer
      working-directory: ${{github.workspace}}/${{ env.BUILD_DIR }}/${{env.COMPOSER_DIR}}/${{ env.PROJECT_NAME_COMPOSER }}_artefacts/${{ env.BUILD_TYPE }}
      run: |
        cmake -E tar cfv "${{ env.PROJECT_NAME_COMPOSER }}.zip" --format=zip "${{env.PROJECT_NAME_COMPOSER}}${{matrix.extension}}"

    - name: Upload Artifact Polytempo Network
      uses: actions/upload-artifact@v3
      with:
        path: ${{github.workspace}}/${{ env.BUILD_DIR }}/${{env.NETWORK_DIR}}/${{ env.PROJECT_NAME_NETWORK }}_artefacts/${{ env.BUILD_TYPE }}/${{env.PROJECT_NAME_NETWORK}}.zip
        name: ${{ env.PROJECT_NAME_NETWORK }}_${{ matrix.artifact }}_${{ needs.prepare.outputs.version }}
  
    - name: Upload Artifact Polytempo Composer
      uses: actions/upload-artifact@v3
      with:
        path: ${{github.workspace}}/${{ env.BUILD_DIR }}/${{env.COMPOSER_DIR}}/${{ env.PROJECT_NAME_COMPOSER }}_artefacts/${{ env.BUILD_TYPE }}/${{env.PROJECT_NAME_COMPOSER}}.zip
        name: ${{ env.PROJECT_NAME_COMPOSER }}_${{ matrix.artifact }}_${{ needs.prepare.outputs.version }}
  
  publish:
    name: Publish Release
    needs: [prepare, build]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Download artiacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
              
    - name: Show content tree
      shell: bash
      run: |
        find . | sed -e "s/[^-][^\/]*\// |/g" -e "s/|\([^ ]\)/|-\1/"

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ needs.prepare.outputs.version }}
        prerelease: ${{ needs.prepare.outputs.hasTweak }}
        files: |
          artifacts/*/*