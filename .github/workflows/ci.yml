name: CI

on:  
  pull_request:
    branches:
      - master
      
env:
  BUILD_TYPE: Release
  PROJECT_NAME_NETWORK: PolytempoNetwork
  PROJECT_NAME_COMPOSER: PolytempoComposer
  NETWORK_DIR: 'POLYTEMPO NETWORK'
  COMPOSER_DIR: 'POLYTEMPO COMPOSER'
  BUILD_DIR: build
  
jobs:
  build:
    name: ${{ matrix.artifact }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
        - os: ubuntu-latest
          artifact: Linux
          extension: ''
        - os: windows-latest
          artifact: Windows
          extension: '.exe'
        - os: macos-latest
          artifact: MacOS
          extension: '.app'
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      
    - name: Checkout submodules
      run: git submodule update --init --recursive --depth 1
      
    - if: ${{ runner.os == 'Linux' }}
      name: Install JUCE dependencies (Linux only)
      id: juce_dependencies
      run: | 
        sudo apt-get install -y g++ libgtk-3-dev libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev mesa-common-dev libasound2-dev freeglut3-dev libxcomposite-dev libcurl4-openssl-dev
        sudo add-apt-repository -y ppa:webkit-team && sudo apt-get update
        sudo apt-get install libwebkit2gtk-4.0-37 libwebkit2gtk-4.0-dev
        
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/${{ env.BUILD_DIR }}

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/${{ env.BUILD_DIR }}
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/${{ env.BUILD_DIR }}
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

# upload artifacts
    - name: Zip Polytempo Network
      working-directory: ${{runner.workspace}}/${{ env.BUILD_DIR }}/${{env.NETWORK_DIR}}/${{ env.PROJECT_NAME_NETWORK }}_artefacts/${{ env.BUILD_TYPE }}
      run: |
        cmake -E tar cfv "${{ env.PROJECT_NAME_NETWORK }}.zip" --format=zip "${{env.PROJECT_NAME_NETWORK}}${{matrix.extension}}"
    
    - name: Zip Polytempo Composer
      working-directory: ${{runner.workspace}}/${{ env.BUILD_DIR }}/${{env.COMPOSER_DIR}}/${{ env.PROJECT_NAME_COMPOSER }}_artefacts/${{ env.BUILD_TYPE }}
      run: |
        cmake -E tar cfv "${{ env.PROJECT_NAME_COMPOSER }}.zip" --format=zip "${{env.PROJECT_NAME_COMPOSER}}${{matrix.extension}}"

    - name: Upload Artifact Polytempo Network
      uses: actions/upload-artifact@v2
      with:
        path: ${{runner.workspace}}/${{ env.BUILD_DIR }}/${{env.NETWORK_DIR}}/${{ env.PROJECT_NAME_NETWORK }}_artefacts/${{ env.BUILD_TYPE }}/${{env.PROJECT_NAME_NETWORK}}.zip
        name: ${{ env.PROJECT_NAME_NETWORK }}_${{ matrix.artifact }}_CI

    - name: Upload Artifact Polytempo Composer
      uses: actions/upload-artifact@v2
      with:
        path: ${{runner.workspace}}/${{ env.BUILD_DIR }}/${{env.COMPOSER_DIR}}/${{ env.PROJECT_NAME_COMPOSER }}_artefacts/${{ env.BUILD_TYPE }}/${{env.PROJECT_NAME_COMPOSER}}.zip
        name: ${{ env.PROJECT_NAME_COMPOSER }}_${{ matrix.artifact }}_CI